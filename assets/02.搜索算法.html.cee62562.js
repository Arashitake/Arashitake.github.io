import{_ as p,o as a,c as t,b as n,d as e,e as s}from"./app.0d4c2068.js";const o={},c=e(`<h2 id="_1-\u4E8C\u5206\u641C\u7D22-binary-search" tabindex="-1"><a class="header-anchor" href="#_1-\u4E8C\u5206\u641C\u7D22-binary-search" aria-hidden="true">#</a> 1. \u4E8C\u5206\u641C\u7D22 Binary Search</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">arr</span> \u6709\u5E8F\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">x</span> \u8981\u67E5\u627E\u7684\u6570
 * <span class="token keyword">@return</span> \u8981\u67E5\u627E\u7684\u6570\u5728\u6570\u7EC4\u4E2D\u7684\u4E0B\u8868
 */</span>
<span class="token keyword">function</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> mid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u6709\u627E\u5BFB\u5230</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><mark><strong>\u6539\u8FDB\uFF1A\u4F4D\u8FD0\u7B97</strong></mark></p>`,3),l={class:"custom-container warning"},i={viewBox:"0 0 25 25",xmlns:"http://www.w3.org/2000/svg","xml:space":"preserve",style:{"fill-rule":"evenodd","clip-rule":"evenodd","stroke-linejoin":"round","stroke-miterlimit":"2"}},r=n("path",{d:"M297.65 123.32C133.27 123.32 0 256.58 0 421c0 164.42 133.27 297.6 297.65 297.6 164.38 0 297.64-133.26 297.64-297.6 0-164.34-133.29-297.68-297.64-297.68Zm-.6 483.32c-22.591 0-41.18-18.589-41.18-41.18s18.589-41.18 41.18-41.18 41.18 18.589 41.18 41.18-18.589 41.18-41.18 41.18Zm42.38-164.27h-.23c-.139 22.489-18.681 40.916-41.17 40.916-22.586 0-41.171-18.585-41.171-41.171l.001-.255c0-1 .05-1.93.11-2.88V276.73h.03v-.27a45.8 45.8 0 0 1-.005-.642c0-22.59 18.589-41.18 41.18-41.18s41.18 18.59 41.18 41.18c0 .214-.002.428-.005.642v.27h.06l.02 165.64Z",style:{fill:"#f3cc2e","fill-rule":"nonzero"},transform:"matrix(.042 0 0 .042 0 -5.18)"},null,-1),u=[r],k=n("p",{class:"custom-container-title"},"WARNING",-1),d=n("p",null,[n("strong",null,[s("\u4E2D\u95F4\u503C"),n("code",null,"mid"),s("\u7684\u4F4D\u8FD0\u7B97\u6539\u8FDB")]),s("\uFF1A"),n("code",null,"let mid = left + ((right - left) >> 1)"),s(" \u786E\u4FDD\u4E86\u8BA1\u7B97\u4E2D\u70B9\u65F6\u7684\u5B89\u5168\u6027\uFF0C\u907F\u514D\u4E86 left \u548C right \u90FD\u662F\u5927\u503C\u65F6\u7684\u6EA2\u51FA\u95EE\u9898")],-1),m=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">arr</span> \u6709\u5E8F\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">x</span> \u8981\u67E5\u627E\u7684\u6570
 * <span class="token keyword">@return</span> \u8981\u67E5\u627E\u7684\u6570\u5728\u6570\u7EC4\u4E2D\u7684\u4E0B\u8868
 */</span>
<span class="token keyword">function</span> <span class="token function">binarySearch2</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> mid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6539\u8FDB-\u4F4D\u8FD0\u7B97\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u6539\u8FDB-\u4F4D\u8FD0\u7B97\u539F\u7406" aria-hidden="true">#</a> \u6539\u8FDB\uFF1A\u4F4D\u8FD0\u7B97\u539F\u7406</h3><p>\u8868\u8FBE\u5F0F <code>(right - left) &gt;&gt; 1</code> \u662F\u4E00\u4E2A\u4F4D\u8FD0\u7B97\uFF0C\u901A\u5E38\u7528\u4E8E\u7B97\u6CD5\u4E2D\uFF0C\u7279\u522B\u662F\u4E8C\u5206\u67E5\u627E\uFF0C\u4EE5\u8BA1\u7B97\u4E00\u4E2A\u8303\u56F4\u7684\u4E2D\u70B9\uFF1A</p><ol><li>\u51CF\u6CD5\u8FD0\u7B97 <code>(right - left)</code>\uFF1A\u8BA1\u7B97 right \u548C left \u4E4B\u95F4\u7684\u5DEE\u503C\uFF1B</li><li>\u4F4D\u53F3\u79FB <code>(&gt;&gt; 1)</code>\uFF1A\u5C06\u7ED3\u679C\u7684\u4E8C\u8FDB\u5236\u4F4D\u53F3\u79FB\u4E00\u4F4D\uFF0C\u5B9E\u9645\u4E0A\u76F8\u5F53\u4E8E\u5C06\u7ED3\u679C\u9664\u4EE5 2 \u5E76\u820D\u5F03\u4F59\u6570\u3002</li></ol>`,4),v={class:"custom-container tip"},b={viewBox:"0 0 25 25",xmlns:"http://www.w3.org/2000/svg","xml:space":"preserve",style:{"fill-rule":"evenodd","clip-rule":"evenodd","stroke-linejoin":"round","stroke-miterlimit":"2"}},h=n("path",{d:"M297.6 258.73H296c-59.47.87-110.69 51.45-111.83 110.43-.626 36.485 16.525 71.085 45.94 92.68 17.86 13.18 29.88 33.56 33.77 56.42h67.62c4-22.82 16.13-43.3 34.16-56.74 28.589-21.097 45.496-54.587 45.496-90.118 0-30.03-12.078-58.833-33.496-79.882a113.133 113.133 0 0 0-80.06-32.79ZM265.19 550.7v26.6c0 4.84 1.17 6.43 1.17 6.43l63.72-.59V550.7h-64.89Z",style:{fill:"#48b884","fill-rule":"nonzero"},transform:"matrix(.042 0 0 .042 0 -5.178)"},null,-1),f=n("path",{d:"M297.64 123.3C133.26 123.3 0 256.56 0 420.94s133.26 297.63 297.64 297.63 297.63-133.25 297.63-297.63S462 123.3 297.64 123.3ZM385 487.57c-14.11 10.48-22.51 28.09-22.51 47.14v48.43c-.016 17.792-14.648 32.428-32.44 32.45h-64.86c-15.6 0-32.44-12-32.44-38.29v-42.82c0-19-8.21-36.4-21.93-46.52-37.882-27.85-59.959-72.44-59.14-119.45 1.46-77.24 66-141.09 143.81-142.22 38.87.19 76.89 14.37 105 42.11a143.764 143.764 0 0 1 43.14 103c-.159 45.761-21.911 88.86-58.63 116.17Z",style:{fill:"#48b884","fill-rule":"nonzero"},transform:"matrix(.042 0 0 .042 0 -5.178)"},null,-1),g=[h,f],_=n("p",{class:"custom-container-title"},"TIP",-1),w=n("p",null,[s("\u8FD9\u4E2A\u64CD\u4F5C "),n("code",null,"(right - left) >> 1"),s(" \u7B49\u6548\u4E8E "),n("code",null,"Math.floor((right - left) / 2)"),s("\uFF0C\u4F46\u4F7F\u7528\u4F4D\u8FD0\u7B97\u901A\u5E38\u66F4\u5FEB\uFF0C\u56E0\u4E3A\u5B83\u76F4\u63A5\u64CD\u4F5C\u4E8C\u8FDB\u5236\u4F4D\u800C\u4E0D\u662F\u8FDB\u884C\u6D6E\u70B9\u9664\u6CD5\u3002")],-1),y=e(`<h3 id="\u6539\u8FDB-\u4F4D\u8FD0\u7B97\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u6539\u8FDB-\u4F4D\u8FD0\u7B97\u793A\u4F8B" aria-hidden="true">#</a> \u6539\u8FDB\uFF1A\u4F4D\u8FD0\u7B97\u793A\u4F8B</h3><ol><li>\u5047\u8BBE <code>left = 0</code> \u548C <code>right = 10</code>\uFF1B</li><li><code>(right - left)</code> \u662F <code>10 - 0 = 10</code>\uFF1B</li><li><code>10 &gt;&gt; 1</code> \u662F 5\uFF08\u56E0\u4E3A 10 \u7684\u4E8C\u8FDB\u5236\u8868\u793A\u662F 1010\uFF0C\u53F3\u79FB\u4E00\u4F4D\u5F97\u5230 0101\uFF0C\u5373\u5341\u8FDB\u5236\u7684 5\uFF09\uFF1B</li><li>\u56E0\u6B64\uFF0C<code>(right - left) &gt;&gt; 1</code> \u6709\u6548\u5730\u8BA1\u7B97\u4E86 left \u548C right \u4E4B\u95F4\u8DDD\u79BB\u7684\u4E00\u534A\u3002</li></ol><p>\u8FD9\u4E2A\u8868\u8FBE\u5F0F\u5728\u5B9E\u9645\u5E94\u7528\u4E2D\u6709\u52A9\u4E8E<strong>\u63D0\u9AD8\u7B97\u6CD5\u7684\u6548\u7387\u548C\u5B89\u5168\u6027</strong>\u3002</p><h2 id="_2-\u987A\u5E8F\u641C\u7D22-sequential-search" tabindex="-1"><a class="header-anchor" href="#_2-\u987A\u5E8F\u641C\u7D22-sequential-search" aria-hidden="true">#</a> 2. \u987A\u5E8F\u641C\u7D22 Sequential Search</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sequentialSearch</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;index: &#39;</span> <span class="token operator">+</span> <span class="token function">sequentialSearch</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;number: &#39;</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span><span class="token function">sequentialSearch</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function x(j,S){return a(),t("div",null,[c,n("div",l,[(a(),t("svg",i,u)),k,d]),m,n("div",v,[(a(),t("svg",b,g)),_,w]),y])}var Z=p(o,[["render",x],["__file","02.\u641C\u7D22\u7B97\u6CD5.html.vue"]]);export{Z as default};
