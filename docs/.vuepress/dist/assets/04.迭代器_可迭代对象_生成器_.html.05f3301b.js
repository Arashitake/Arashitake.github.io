import{_ as n,o as s,c as a,d as t}from"./app.f9568f53.js";const p={},o=t(`<ol><li>\u6982\u5FF5: \u8FED\u4EE3\u5668 iterator, \u662F\u786E\u4F7F\u7528\u6237\u53EF\u5728\u5BB9\u5668\u5BF9\u8C61\uFF08\u4F8B\u5982\u94FE\u8868\u548C\u6570\u7EC4\uFF09\u4E0A\u8BBF\u95EE\u7684\u5BF9\u8C61, \u8BBE\u8BA1\u4EBA\u5458\u4F7F\u7528\u6B64\u63A5\u53E3\u65E0\u9700\u5173\u5FC3\u5BB9\u5668\u5BF9\u8C61\u7684\u5185\u5B58\u5206\u914D\u7684\u5B9E\u73B0\u7EC6\u8282\u3002</li><li>JS \u4E2D\u7684\u8FED\u4EE3\u5668: \u672C\u8D28\u5C31\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u7B26\u5408\u8FED\u4EE3\u5668\u534F\u8BAE</li><li>\u8FED\u4EE3\u5668\u534F\u8BAE <ol><li>\u5176\u5BF9\u8C61\u8FD4\u56DE\u4E00\u4E2A next \u51FD\u6570</li><li>\u8C03\u7528 next \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5176\u5BF9\u8C61\u4E2D\u5305\u542B\u4E24\u4E2A\u5C5E\u6027 <ol><li>done \u5B8C\u6210\uFF0C\u4E3A\u5E03\u5C14\u503C <ul><li>\u5982\u679C\u8FED\u4EE3\u5668\u6CA1\u6709\u8FED\u4EE3\u5B8C\u6210\u5373\u8FD4\u56DE <code>{done: false}</code></li><li>\u5F53\u8FED\u4EE3\u5668\u5B8C\u6210\u4E86\u5373\u8FD4\u56DE <code>{done: true}</code></li></ul></li><li>value \u503C\uFF0C\u53EF\u4EE5\u8FD4\u56DE js \u4E2D\u7684\u4EFB\u4F55\u503C\uFF0CTS \u4E2D\u53EF\u4EE5\u8868\u793A\u4E3A <code>value: any</code>\u7C7B\u578B</li></ol></li></ol></li></ol><h2 id="_1-1-\u8FED\u4EE3\u5668\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_1-1-\u8FED\u4EE3\u5668\u7684\u5B9E\u73B0" aria-hidden="true">#</a> 1.1 \u8FED\u4EE3\u5668\u7684\u5B9E\u73B0</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u8FED\u4EE3\u5668\u7684\u57FA\u672C\u5B9E\u73B001</span>
<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> iterator <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> arr<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5F0A\u7AEF <ul><li>\u8FDD\u80CC\u4E86\u9AD8\u5185\u805A\u601D\u60F3\uFF0C index \u548C iterator \u5BF9\u8C61\u662F\u5C5E\u4E8E\u4E00\u4E2A\u6574\u4F53\uFF0C\u5374\u4F7F\u7528\u4E86\u5168\u5C40\u53D8\u91CF\uFF0C\u4ECE V8 \u5F15\u64CE\u7684 GC\uFF0C\u53EF\u8FBE\u6027(\u4E5F\u5C31\u662F\u6807\u8BB0\u6E05\u9664)\u6765\u770B\uFF0C\u5982\u679C bears = null \uFF0C\u4E0D\u624B\u52A8\u8BBE\u7F6E\u4E3A null \u5F88\u6709\u53EF\u80FD\u4F1A\u9020\u6210\u5185\u5B58\u6CC4\u6F0F\uFF0C\u5E76\u4E14\u5185\u805A\u6027\u4F4E\u3002</li><li>\u5047\u5982\u8981\u521B\u5EFA\u4E00\u767E\u4E2A\u8FED\u4EE3\u5668\u5BF9\u8C61\u5462\uFF1F \u90A3\u5C31\u8981\u5B9A\u4E49\u4E00\u767E\u904D\u5417\uFF1F\u80AF\u5B9A\u9519\u8BEF\u7684\uFF0C\u6211\u4EEC\u8981\u628A\u5B83\u5C01\u88C5\u8D77\u6765\uFF0C\u8FD9\u6837\u5185\u805A\u6027\u53C8\u9AD8\uFF0C\u53C8\u80FD\u8FDB\u884C\u590D\u7528\u3002</li></ul></li></ul><h2 id="_1-2-\u8FED\u4EE3\u5668\u7684\u5C01\u88C5\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_1-2-\u8FED\u4EE3\u5668\u7684\u5C01\u88C5\u5B9E\u73B0" aria-hidden="true">#</a> 1.2 \u8FED\u4EE3\u5668\u7684\u5C01\u88C5\u5B9E\u73B0</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">createArrIterator</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> _iterator <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> arr<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> _iterator<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> iter <span class="token operator">=</span> <span class="token function">createArrIterator</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5185\u805A\u6027\u975E\u5E38\u9AD8\uFF0C\u5C3D\u6700\u5927\u53EF\u80FD\u8FDB\u884C\u4E86\u590D\u7528\uFF0C\u51CF\u5C11\u5197\u4F59\u4EE3\u7801\u3002</li></ul><h1 id="_2-\u53EF\u8FED\u4EE3\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_2-\u53EF\u8FED\u4EE3\u5BF9\u8C61" aria-hidden="true">#</a> 2. \u53EF\u8FED\u4EE3\u5BF9\u8C61</h1><ol><li><strong>\u6CE8\u610F</strong>: \u5185\u805A\u6027\u975E\u5E38\u9AD8\uFF0C\u5C3D\u6700\u5927\u53EF\u80FD\u8FDB\u884C\u4E86\u590D\u7528\uFF0C\u51CF\u5C11\u5197\u4F59\u4EE3\u7801</li><li>\u6982\u5FF5: \u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4E14\u7B26\u5408\u53EF\u8FED\u4EE3\u5BF9\u8C61\u534F\u8BAE iterable protocol</li><li><strong>\u53EF\u8FED\u4EE3\u5BF9\u8C61\u534F\u8BAE</strong>: \u5B9E\u73B0\u4E86[Symbol.iterator]\u4E3A key \u7684\u65B9\u6CD5\uFF0C\u4E14\u8FD9\u4E2A\u65B9\u6CD5\u8FD4\u56DE\u4E86\u4E00\u4E2A\u8FED\u4EE3\u5668\u5BF9\u8C61</li><li>\u53EF\u8FED\u4EE3\u5BF9\u8C61\u6709\u4EC0\u4E48\u597D\u5904\u5462\uFF1F\u6709\u4EC0\u4E48\u5E94\u7528\u573A\u666F\u5462\uFF1F <ul><li>\u4F7F\u7528 <strong>for of</strong> \u7684\u65F6\u5019\uFF0C\u672C\u8D28\u5C31\u662F\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570\uFF0C\u4E5F\u5C31\u662F[Symbol.iterator]\u4E3A key \u7684\u65B9\u6CD5</li></ul></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. for of</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;Arashitake&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Su&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Mo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Tu&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;We&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Th&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Fr&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Sa&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u6253\u5370 str \u4E2D\u7684\u6BCF\u4E2A\u5B57\u7B26</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> char <span class="token keyword">of</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6253\u5370 arr \u4E2D\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 2. \u5BDF\u770B\u5185\u7F6E\u7684 [Symbol.iterator]</span>
<span class="token keyword">const</span> bears <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;ice&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;panda&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;grizzly&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//\u6570\u7EC4\u7684Symbol.iterator\u65B9\u6CD5</span>
<span class="token keyword">const</span> iter <span class="token operator">=</span> bears<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { value: &#39;ice&#39;, done: false }</span>
<span class="token comment">// { value: &#39;panda&#39;, done: false }</span>
<span class="token comment">// { value: &#39;grizzly&#39;, done: false }</span>
<span class="token comment">// { value: undefined, done: true }</span>

<span class="token keyword">const</span> nickName <span class="token operator">=</span> <span class="token string">&quot;ice&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//\u5B57\u7B26\u4E32\u7684Symbol.iterator\u65B9\u6CD5</span>
<span class="token keyword">const</span> strIter <span class="token operator">=</span> nickName<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>strIter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>strIter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>strIter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>strIter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { value: &#39;i&#39;, done: false }</span>
<span class="token comment">// { value: &#39;c&#39;, done: false }</span>
<span class="token comment">// { value: &#39;e&#39;, done: false }</span>
<span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-1-\u539F\u751F\u53EF\u8FED\u4EE3\u5BF9\u8C61-js-\u5185\u7F6E" tabindex="-1"><a class="header-anchor" href="#_2-1-\u539F\u751F\u53EF\u8FED\u4EE3\u5BF9\u8C61-js-\u5185\u7F6E" aria-hidden="true">#</a> 2.1 \u539F\u751F\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF08JS \u5185\u7F6E\uFF09</h2><ol><li>String</li><li>Array</li><li>Set</li><li>NodeList \u7C7B\u6570\u7EC4\u5BF9\u8C61</li><li>Arguments \u7C7B\u6570\u7EC4\u5BF9\u8C61</li><li>Map</li></ol><h2 id="_2-2-\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-2-\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5B9E\u73B0" aria-hidden="true">#</a> 2.2 \u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5B9E\u73B0</h2><ol><li>\u7B26\u5408<strong>\u53EF\u8FED\u4EE3\u5BF9\u8C61\u534F\u8BAE</strong>\uFF0C\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6709**[Symbol.iterator]<strong>\u65B9\u6CD5\uFF0C\u5E76\u4E14\u8FD9\u4E2A\u65B9\u6CD5\u8FD4\u56DE\u4E86\u4E00\u4E2A</strong>\u8FED\u4EE3\u5668\u5BF9\u8C61**</li><li>\u5F53\u5229\u7528 for of \u904D\u5386\uFF0C\u5C31\u4F1A\u81EA\u52A8\u7684\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> info <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> _iterator <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> _iterator<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> iter <span class="token operator">=</span> info<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { done: false, value: 1 }</span>
<span class="token comment">// { done: false, value: 2 }</span>
<span class="token comment">// { done: false, value: 3 }</span>
<span class="token comment">// { done: true, value: undefined }</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-3-\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#_2-3-\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5E94\u7528" aria-hidden="true">#</a> 2.3 \u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5E94\u7528</h2><ol><li>for of</li><li>\u5C55\u5F00\u8BED\u6CD5</li><li>\u89E3\u6784\u8BED\u6CD5</li><li>promise.all(iterable)</li><li>promise.race(iterable)</li><li>Array.from(iterable)</li></ol><h2 id="_2-4-\u81EA\u5B9A\u4E49\u7C7B\u8FED\u4EE3\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-4-\u81EA\u5B9A\u4E49\u7C7B\u8FED\u4EE3\u5B9E\u73B0" aria-hidden="true">#</a> 2.4 \u81EA\u5B9A\u4E49\u7C7B\u8FED\u4EE3\u5B9E\u73B0</h2><blockquote><p>\u6B64\u6848\u4F8B\u53EA\u662F\u7B80\u5355\u7684\u5BF9 friends \u8FDB\u884C\u4E86\u8FED\u4EE3\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u8FED\u4EE3\u4F60\u60F3\u8981\u7684\u4E00\u5207\u4E1C\u897F... \u8BB0\u4F4F\u6B64\u6848\u4F8B\uFF0C\u540E\u7EED\u6211\u4EEC\u4F1A\u5BF9\u8FD9\u4E2A\u6848\u4F8B\u8FDB\u884C\u91CD\u6784\uFF0C\u4F18\u96C5\u7684\u4F1A\u8BA9\u4F60\u4E0D\u80FD\u7528\u8A00\u8BED\u6765\u5F62\u5BB9\u3002</p></blockquote>`,19),e=[o];function c(l,i){return s(),a("div",null,e)}var r=n(p,[["render",c],["__file","04.\u8FED\u4EE3\u5668_\u53EF\u8FED\u4EE3\u5BF9\u8C61_\u751F\u6210\u5668_.html.vue"]]);export{r as default};
